/**
 * Deepin官网
 * deepin的官方网站后台接口
 *
 * The version of the OpenAPI document: 1.0
 * Contact: wurongjie@deepin.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHandlers_ClientBBSTokenRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHandlers_ClientBBSTokenRequest::OAIHandlers_ClientBBSTokenRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHandlers_ClientBBSTokenRequest::OAIHandlers_ClientBBSTokenRequest() {
    this->initializeModel();
}

OAIHandlers_ClientBBSTokenRequest::~OAIHandlers_ClientBBSTokenRequest() {}

void OAIHandlers_ClientBBSTokenRequest::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_secret_isSet = false;
    m_secret_isValid = false;
}

void OAIHandlers_ClientBBSTokenRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHandlers_ClientBBSTokenRequest::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_secret_isValid = ::OpenAPI::fromJsonValue(secret, json[QString("secret")]);
    m_secret_isSet = !json[QString("secret")].isNull() && m_secret_isValid;
}

QString OAIHandlers_ClientBBSTokenRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHandlers_ClientBBSTokenRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(id));
    }
    if (m_secret_isSet) {
        obj.insert(QString("secret"), ::OpenAPI::toJsonValue(secret));
    }
    return obj;
}

QString OAIHandlers_ClientBBSTokenRequest::getId() const {
    return id;
}
void OAIHandlers_ClientBBSTokenRequest::setId(const QString &id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool OAIHandlers_ClientBBSTokenRequest::is_id_Set() const{
    return m_id_isSet;
}

bool OAIHandlers_ClientBBSTokenRequest::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIHandlers_ClientBBSTokenRequest::getSecret() const {
    return secret;
}
void OAIHandlers_ClientBBSTokenRequest::setSecret(const QString &secret) {
    this->secret = secret;
    this->m_secret_isSet = true;
}

bool OAIHandlers_ClientBBSTokenRequest::is_secret_Set() const{
    return m_secret_isSet;
}

bool OAIHandlers_ClientBBSTokenRequest::is_secret_Valid() const{
    return m_secret_isValid;
}

bool OAIHandlers_ClientBBSTokenRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secret_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHandlers_ClientBBSTokenRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_secret_isValid && true;
}

} // namespace OpenAPI
